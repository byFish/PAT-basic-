#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int cmp(const void *a, const void *b) {
	return *(int*)b - *(int*)a;
}

int main() {
	int n, m;
	int num, a[10005], b[1005][1005] = {0};
	int w = 0;//螺旋方向
	scanf("%d", &num);
	for (int i = sqrt(num); i >= 0; i--) {
		if (num %i == 0) {
			m = num / i;
			n = i;
			break;
		}
	}
	for (int i = 0; i < num; i++) {
		scanf("%d", &a[i]);
	}
	qsort(a, num, sizeof(int), cmp);
	if (n == 1) {//注意当n小的时候，m可能大于b的边界
		for(int i =0;i < num;i++)
			printf("%d\n", a[i]);
		return 0;
	}
	int j = 0,k = 0,i = 0;
	int istwicew = 0;//是否连续转弯
	while (1) {
		if (b[j][k] != 0 || j >= m || j < 0 || k >= n || k < 0) {
			switch (w % 4)
			{
			case 0:
				k--;
				j++;
				break;
			case 1:
				j--;
				k--;
				break;
			case 2:
				k++;
				j--;
				break;
			default:
				j++;
				k++;
				break;
			}
			w++;
			if (istwicew == 1)
				break;
			istwicew = 1;
		}
		else {			
			b[j][k] = a[i];
			i++;
			switch (w%4)
			{
			case 0:
				k++;
				break;
			case 1:
				j++;
				break;
			case 2:
				k--;
				break;
			default:
				j--;
				break;
			}
			istwicew = 0;
		}
	}
	for (int i = 0; i < m; i++) {
		for (int j = 0; j < n; j++) {
			printf("%d", b[i][j]);
			if (j != n - 1)
				printf(" ");
		}
		printf("\n");
	}
	return 0;
}